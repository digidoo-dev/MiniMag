@model IEnumerable<MiniMag.Models.Product>

@{
	ViewData["Title"] = "Stock Levels";
}

<div class="d-flex flex-row mb-5">
	<div class="col-3 p-2">
		<h1>Stock Levels</h1>
	</div>

	<div class="col-9 p-2">
		<form asp-action="Index" method="get">
			<div class="d-flex flex-row flex-wrap">
				<div class="col-8">
					@if (ViewData["Search"] == null)
					{
						<input name="search" type="text" placeholder="Enter (part of) Name or Location" />
					}
					else
					{
						<input name="search" type="text" value="@ViewData["Search"]" placeholder="Enter (part of) Name or Location" />
					}
				</div>
				<div class="col-4">
					@if (ViewData["LowStock"] != null)
					{
						<input name="lowStock" type="number" min="1" step="1" placeholder="Quantity less than:" value="@ViewData["LowStock"]"/>
					}
					else
					{
						<input name="lowStock" type="number" min="1" step="1" placeholder="Quantity less than:" />
					}
				</div>
				<div>
					<button type="submit">Search</button>
				</div>
			</div>
		</form>
	</div>



</div>


<div>
	<p>
		<a asp-action="Create" class="button">Add New Item</a>
	</p>
</div>
<table class="table table-with-highlight">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Name)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Quantity)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Price)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Location)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Quantity)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Price)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Location)
				</td>
				<td>
					<a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
					<a asp-action="Details" asp-route-id="@item.ID">Details</a> |
					<a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>
